import pandas as pd
import matplotlib.pyplot as plt

# Sample data (replace this with your actual data)
data = {
    'Sparsity': [0.1, 0.2, 0.3],
    'MAP@50_Class1': [0.8, 0.7, 0.6],
    'MAP@95_Class1': [0.9, 0.85, 0.75],
    'MAP@50_Class2': [0.7, 0.65, 0.55],
    'MAP@95_Class2': [0.85, 0.8, 0.7],
    'MAP@50_Class3': [0.6, 0.55, 0.45],
    'MAP@95_Class3': [0.75, 0.7, 0.6],
}

df = pd.DataFrame(data)

# Plotting
plt.figure(figsize=(10, 6))

# Plot MAP@50 for each class
for class_num in range(1, 4):
    plt.plot(df['Sparsity'], df[f'MAP@50_Class{class_num}'], marker='o', label=f'Class {class_num} - MAP@50')

# Plot MAP@95 for each class
for class_num in range(1, 4):
    plt.plot(df['Sparsity'], df[f'MAP@95_Class{class_num}'], marker='o', label=f'Class {class_num} - MAP@95')

# Add labels and title
plt.xlabel('Sparsity Level')
plt.ylabel('MAP Scores')
plt.title('MAP Scores at Different Sparsity Levels for Each Class')
plt.legend()

# Show the plot
plt.grid(True)
plt.show()


import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Sample data (replace this with your actual data)
data = {
    'Sparsity': [0.1, 0.2, 0.3],
    'MAP@50_all': [0.8, 0.7, 0.6],
    'MAP@95_all': [0.9, 0.85, 0.75],
    'MAP@50_other': [0.7, 0.65, 0.55],
    'MAP@95_other': [0.85, 0.8, 0.7],
    'MAP@50_another': [0.6, 0.55, 0.45],
    'MAP@95_another': [0.75, 0.7, 0.6],
}

df = pd.DataFrame(data)

# Line Plot
plt.figure(figsize=(12, 8))
objects = ['all', 'other', 'another']

for obj in objects:
    plt.plot(df['Sparsity'], df[f'MAP@50_{obj}'], marker='o', label=f'{obj.capitalize()} - MAP@50')
    plt.plot(df['Sparsity'], df[f'MAP@95_{obj}'], marker='o', label=f'{obj.capitalize()} - MAP@95')

plt.xlabel('Sparsity Level')
plt.ylabel('MAP Scores')
plt.title('Line Plot of MAP Scores at Different Sparsity Levels for Each Object')
plt.legend()
plt.grid(True)
plt.show()

# Subplots
fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(12, 8))

for i, ax in enumerate(axes.flatten()):
    obj = objects[i]
    ax.plot(df['Sparsity'], df[f'MAP@50_{obj}'], marker='o', label=f'{obj.capitalize()} - MAP@50')
    ax.plot(df['Sparsity'], df[f'MAP@95_{obj}'], marker='o', label=f'{obj.capitalize()} - MAP@95')
    ax.set_xlabel('Sparsity Level')
    ax.set_ylabel('MAP Scores')
    ax.set_title(f'Subplot - {obj.capitalize()}')
    ax.legend()
    ax.grid(True)

plt.tight_layout()
plt.show()

# Heat Map
plt.figure(figsize=(12, 8))
heatmap_data = df.set_index('Sparsity').T
plt.imshow(heatmap_data, cmap='viridis', interpolation='nearest')
plt.colorbar()
plt.xticks(np.arange(len(df['Sparsity'])), df['Sparsity'])
plt.yticks(np.arange(len(df.columns[1:])), df.columns[1:], rotation=0)
plt.xlabel('Sparsity Level')
plt.ylabel('Object')
plt.title('Heat Map of MAP Scores at Different Sparsity Levels for Each Object')
plt.show()

# Bar Plot
plt.figure(figsize=(12, 8))
for obj in objects:
    plt.bar(df['Sparsity'], df[f'MAP@50_{obj}'], label=f'{obj.capitalize()} - MAP@50')
    plt.bar(df['Sparsity'], df[f'MAP@95_{obj}'], label=f'{obj.capitalize()} - MAP@95')

plt.xlabel('Sparsity Level')
plt.ylabel('MAP Scores')
plt.title('Bar Plot of MAP Scores at Different Sparsity Levels for Each Object')
plt.legend()
plt.grid(True)
plt.show()



//////////////////
import pandas as pd
import matplotlib.pyplot as plt

# Sample data
data = {
    'Sparsity': [0.1, 0.2, 0.3],
    'MAP@50_all': [0.8, 0.7, 0.6],
    'MAP@95_all': [0.9, 0.85, 0.75],
    'MAP@50_other': [0.7, 0.65, 0.55],
    'MAP@95_other': [0.85, 0.8, 0.7],
    'MAP@50_another': [0.6, 0.55, 0.45],
    'MAP@95_another': [0.75, 0.7, 0.6],
    'MAP@50_an': [0.6, 0.55, 0.45],
    'MAP@95_an': [0.75, 0.7, 0.6],
    'MAP@50_w': [0.6, 0.55, 0.45],
    'MAP@95_w': [0.75, 0.7, 0.6],
    'MAP@50_k': [0.6, 0.55, 0.45],
    'MAP@95_k': [0.75, 0.7, 0.6],
    'MAP@50_m': [0.6, 0.55, 0.45],
    'MAP@95_m': [0.75, 0.7, 0.6],
    'MAP@50_8': [0.6, 0.55, 0.45],
    'MAP@95_8': [0.75, 0.7, 0.6],
    'MAP@50_9': [0.6, 0.55, 0.45],
    'MAP@95_9': [0.75, 0.7, 0.6],
    'MAP@50_10': [0.6, 0.55, 0.45],
    'MAP@95_10': [0.75, 0.7, 0.6],
    'MAP@50_11': [0.6, 0.55, 0.45],
    'MAP@95_11': [0.75, 0.7, 0.6],
}

df = pd.DataFrame(data)

# Extract objects from column names
objects = sorted(list(set(col.split('_')[1] for col in df.columns if '_' in col)))

# Create subplots with multiple line plots
fig, axs = plt.subplots(4, 3, figsize=(15, 15))
axs = axs.flatten()

for i, obj in enumerate(objects):
    axs[i].plot(df['Sparsity'], df[f'MAP@50_{obj}'], marker='o', label=f'MAP@50')
    axs[i].plot(df['Sparsity'], df[f'MAP@95_{obj}'], marker='o', label=f'MAP@95')
    axs[i].set_title(f'{obj.capitalize()}')
    axs[i].set_xlabel('Sparsity Level')
    axs[i].set_ylabel('MAP Scores')
    axs[i].legend()

plt.tight_layout()
plt.show()



bar_width = 0.05

# Grouped Bar Plot
fig, ax = plt.subplots(figsize=(12, 6))
for class_num, obj in enumerate(objects):
    x = np.arange(len(df['Sparsity'])) + bar_width * class_num
    ax.bar(x, df[f'MAP@50_{obj}'], width=bar_width, label=f'MAP@50_{obj}')
    ax.bar(x + bar_width, df[f'MAP@95_{obj}'], width=bar_width, label=f'MAP@95_{obj}')
ax.set_xlabel('Sparsity Level')
ax.set_ylabel('MAP Scores')
ax.set_title('Grouped Bar Plot')
ax.set_xticks(np.arange(len(df['Sparsity'])) + bar_width * 4)
ax.set_xticklabels(df['Sparsity'])
ax.legend()
plt.show()
















import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Sample data
data = {
    'Sparsity': [0.1, 0.2, 0.3],
    'MAP@50_all': [0.8, 0.7, 0.6],
    'MAP@95_all': [0.9, 0.85, 0.75],
    'MAP@50_other': [0.7, 0.65, 0.55],
    'MAP@95_other': [0.85, 0.8, 0.7],
    'MAP@50_another': [0.6, 0.55, 0.45],
    'MAP@95_another': [0.75, 0.7, 0.6],
    'MAP@50_an': [0.6, 0.55, 0.45],
    'MAP@95_an': [0.75, 0.7, 0.6],
    'MAP@50_w': [0.6, 0.55, 0.45],
    'MAP@95_w': [0.75, 0.7, 0.6],
    'MAP@50_k': [0.6, 0.55, 0.45],
    'MAP@95_k': [0.75, 0.7, 0.6],
    'MAP@50_m': [0.6, 0.55, 0.45],
    'MAP@95_m': [0.75, 0.7, 0.6],
    'MAP@50_8': [0.6, 0.55, 0.45],
    'MAP@95_8': [0.75, 0.7, 0.6],
    'MAP@50_9': [0.6, 0.55, 0.45],
    'MAP@95_9': [0.75, 0.7, 0.6],
    'MAP@50_10': [0.6, 0.55, 0.45],
    'MAP@95_10': [0.75, 0.7, 0.6],
    'MAP@50_11': [0.6, 0.55, 0.45],
    'MAP@95_11': [0.75, 0.7, 0.6],
    
    'MAP@50_all_original': [0.8, np.nan, np.nan],
    'MAP@95_all_original': [0.9, np.nan, np.nan],
    'MAP@50_other_original': [0.7, np.nan, np.nan],
    'MAP@95_other_original': [0.85, np.nan, np.nan],
    'MAP@50_another_original': [0.6, np.nan, np.nan],
    'MAP@95_another_original': [0.75, np.nan, np.nan],
    'MAP@50_an_original': [0.6, np.nan, np.nan],
    'MAP@95_an_original': [0.75, np.nan, np.nan],
    'MAP@50_w_original': [0.6, np.nan, np.nan],
    'MAP@95_w_original': [0.75, np.nan, np.nan],
    'MAP@50_k_original': [0.6, np.nan, np.nan],
    'MAP@95_k_original': [0.75, np.nan, np.nan],
    'MAP@50_m_original': [0.69, np.nan, np.nan],
    'MAP@95_m_original': [0.75, np.nan, np.nan],
    'MAP@50_8_original': [0.69, np.nan, np.nan],
    'MAP@95_8_original': [0.75, np.nan, np.nan],
    'MAP@50_9_original': [0.6, np.nan, np.nan],
    'MAP@95_9_original': [0.75, np.nan, np.nan],
    'MAP@50_10_original': [0.6, np.nan, np.nan],
    'MAP@95_10_original': [0.75, np.nan, np.nan],
    'MAP@50_11_original': [0.65, np.nan, np.nan],
    'MAP@95_11_original': [0.75, np.nan, np.nan],
}

df = pd.DataFrame(data)

# Extract objects from column names
objects = sorted(list(set(col.split('_')[1] for col in df.columns if '_' in col)))

# Calculate the number of rows and columns for subplots
num_objects = len(objects)
num_rows = num_objects // 2 + num_objects % 2
num_cols = 2

# Create subplots with multiple line plots
fig, axes = plt.subplots(nrows=num_rows, ncols=num_cols, figsize=(12, 8))

for i, obj in enumerate(objects):
    row_index = i // num_cols
    col_index = i % num_cols
    
    # Plot Sparsity values
    axes[row_index, col_index].plot(df['Sparsity'], df[f'MAP@50_{obj}'], marker='o', label=f'MAP@50 - {obj}')
    axes[row_index, col_index].plot(df['Sparsity'], df[f'MAP@95_{obj}'], marker='o', label=f'MAP@95 - {obj}')

    # Plot Original values
    original_mask = ~np.isnan(df[f'MAP@50_{obj}_original'])
    axes[row_index, col_index].plot(df['Sparsity'][original_mask], df[f'MAP@50_{obj}_original'][original_mask],
                                     marker='*', linestyle='', label=f'MAP@50_original - {obj}', color='green')
    
    axes[row_index, col_index].plot(df['Sparsity'][original_mask], df[f'MAP@95_{obj}_original'][original_mask],
                                     marker='*', linestyle='', label=f'MAP@95_original - {obj}', color='green')

    
   # Add x-axis and y-axis labels
#     axes[row_index, col_index].set_xlabel('Sparsity Level')
#     axes[row_index, col_index].set_ylabel('MAP Scores')
#     axes[row_index, col_index].set_title(f'{obj.capitalize()}')
#     #axes[row_index, col_index].legend()
# Adjust layout
plt.tight_layout()
plt.show()
